(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const u of n.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&o(u)}).observe(document,{childList:!0,subtree:!0});function i(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(e){if(e.ep)return;e.ep=!0;const n=i(e);fetch(e.href,n)}})();const r=document.querySelector(".context-menu"),d=document.querySelector(".nav-btn"),l=document.querySelector(".close-btn"),c=document.querySelector(".header");function f(){const t=window.scrollY>0;r.classList.contains("is-open")?(c.classList.add("header-menu"),c.classList.remove("scrolled")):t?(c.classList.add("scrolled"),c.classList.remove("header-menu")):(c.classList.remove("scrolled"),c.classList.remove("header-menu"))}window.addEventListener("scroll",f);d.addEventListener("click",h);let m=!1;function h(){m||(m=!0,r.classList.add("is-open"),d.classList.add("closed"),l.classList.add("is-open"),f(),r.addEventListener("click",v),l.addEventListener("click",a),document.addEventListener("click",p))}function a(){m=!1,r.classList.remove("is-open"),l.classList.remove("is-open"),d.classList.remove("closed"),f(),r.removeEventListener("click",v),l.removeEventListener("click",a),document.removeEventListener("click",p)}function v(t){t.target.nodeName==="A"&&a()}function p(t){const s=r.contains(t.target),i=d.contains(t.target),o=l.contains(t.target);!s&&!i&&!o&&a()}const L=document.querySelectorAll(".nav-list-link"),y=Array.from(L).map(t=>t.getAttribute("href").replace("./index.html#","")),g=y.map(t=>document.getElementById(t)).filter(Boolean),O={root:null,rootMargin:"0px",threshold:.7},E=new IntersectionObserver(t=>{t.forEach(s=>{const i=s.target.id,o=document.querySelector(`.nav-list-link[href="./index.html#${i}"]`);s.isIntersecting&&(L.forEach(e=>e.classList.remove("active")),o==null||o.classList.add("active"))})},O);g.forEach(t=>E.observe(t));
//# sourceMappingURL=header-22ef5adb.js.map
